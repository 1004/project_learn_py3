"""
包就是一个包含 __init_.py 文件的文件夹

目录名 就是包名

import 包名   ：包名就是模块名，加载模块文件，形成模块模块空间，其实在执行模块的的时候，真正执行的是_init__.py 文件


包 就是模块的一种形式

可以聚合一种功能 到包， 导入这个功能 ， 就是导包

"""

print("我是22的包， 开始执行")

"""
组件前面必须是一个包

绝对导入：如果有点的 ，基本是from 包.包.包.组件  improt 组件中的变量值【指向一个堆空间地址】 [以执行文件为准] 《《《跨包》》》
        

import 组件   直接导入组件， 可以使用组件的东西  组件.xxx  

相对路径：.: 当前文件夹   ..: 代表上层文件夹   但是只能在当前包下使用  [以当前文件为准，不能超过当前执行文件父目录]  《《《包内推荐》》》

"""
from aa.m1 import f1  # 当前包 默认就已经加入到到sys.path 下了， 所以可以用绝对路径的方式，找到当前包下面的其他模块  m1前面的必须是一个包

from .m2 import f2  # 相对当前文件进行导入

import os
import sys

print(__)
print(os.path.dirname(__file__))